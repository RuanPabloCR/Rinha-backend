services:
  nginx:
    image: nginx:alpine
    container_name: nginx-lb
    platform: linux/amd64
    ports:
      - "9999:9999"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    deploy:
      resources:
        limits:
          cpus: "0.1"     # Nginx mínimo necessário
          memory: "10MB"
    restart: unless-stopped
    networks:
      - backend
      - payment-processor

  api1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: r-api-1
    platform: linux/amd64
    command: ["/app/wait-for-redis.sh"]
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          cpus: "0.55"    # REVERTIDO: config que funcionava
          memory: "105MB"  # REVERTIDO: config que funcionava
    restart: unless-stopped
    networks:
      - backend

  api2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: r-api-2
    platform: linux/amd64
    command: ["/app/wait-for-redis.sh"]
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          cpus: "0.55"    # REVERTIDO: config que funcionava
          memory: "105MB"  # REVERTIDO: config que funcionava
    restart: unless-stopped
    networks:
      - backend

  redis:
    image: redis:7-alpine
    container_name: redis
    platform: linux/amd64
    deploy:
      resources:
        limits:
          cpus: "0.1"     # REVERTIDO: config que funcionava
          memory: "40MB"  # REVERTIDO: config que funcionava
    restart: unless-stopped
    networks:
      - backend

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: worker
    platform: linux/amd64
    depends_on:
      - redis
    environment:
      - REDIS_HOST=redis:6379
    deploy:
      resources:
        limits:
          cpus: "0.2"    # REVERTIDO: config que funcionava
          memory: "90MB" # REVERTIDO: config que funcionava
    restart: unless-stopped
    networks:
      - backend
      - payment-processor

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true
